<?xml version="1.0" encoding="UTF-8"?>
<project name="vufindhttp" basedir="." default="main">
  <property name="sh" value="/bin/sh" />
  <property name="tmp" value="/tmp" />
  <property name="package"  value="${phing.project.name}" override="true" />
  <property name="builddir" value="${tmp}/build/${phing.project.name}" override="true" />
  <property name="srcdir"   value="${project.basedir}" override="true" />
  <property name="skip_phpdoc" value="false" />
  <property name="phpdoc_version" value="3.3.1" />
  <property name="phpunit_command" value="${srcdir}/vendor/bin/phpunit" />

  <!-- Main Target -->
  <target name="main" description="main target">
    <trycatch property="exceptionmsg">
      <try>
        <phingcall target="startup" />
        <phingcall target="ci-tasks" />
        <phingcall target="shutdown" />
      </try>
      <catch>
        <phingcall target="shutdown" />
        <fail>Unexpected error during continuous integration tasks -- ${exceptionmsg}</fail>
      </catch>
    </trycatch>
  </target>

  <!-- Continuous Integration Tasks -->
  <target name="ci-tasks" description="continuous integration tasks">

    <!-- Create dirs -->
    <mkdir dir="${builddir}/reports"/>
    <mkdir dir="${builddir}/reports/coverage"/>

    <!-- Call standard tasks -->
    <phingcall target="phpcs"/>
    <phingcall target="phpunit"/>
    <phingcall target="phpdoc"/>
    <phingcall target="phpmd"/>
    <phingcall target="pdepend"/>
    <phingcall target="phpstan-checkstyle"/>
  </target>

  <!-- Report rule violations with PHPMD (mess detector) -->
  <target name="phpmd">
    <exec executable="${srcdir}/vendor/bin/phpmd">
      <arg line="${srcdir}/src xml ${srcdir}/tests/phpmd.xml --exclude ${srcdir}/tests --reportfile ${builddir}/reports/phpmd.xml" />
    </exec>  
  </target>

  <!-- PHP_Depend code analysis -->
  <target name="pdepend">
    <exec executable="${srcdir}/vendor/bin/pdepend">
      <arg line="--jdepend-xml=${builddir}/reports/jdepend.xml --jdepend-chart=${builddir}/reports/dependencies.svg --overview-pyramid=${builddir}/reports/pdepend-pyramid.svg ${srcdir}/src" />
    </exec>  
  </target>

  <!-- PHP CodeSniffer -->
  <target name="phpcbf">
    <exec executable="${srcdir}/vendor/bin/phpcbf" escape="false" passthru="true" checkreturn="true">
      <arg line="--standard=${srcdir}/tests/phpcs.xml" />
    </exec>
  </target>
  <target name="phpcs">
    <exec executable="${srcdir}/vendor/bin/phpcs" escape="false">
      <arg line="--standard=${srcdir}/tests/phpcs.xml --report=checkstyle &gt; ${builddir}/reports/checkstyle.xml" />
    </exec>  
  </target>
  <target name="phpcs-console">
    <exec executable="${srcdir}/vendor/bin/phpcs" escape="false" passthru="true" checkreturn="true"> 
      <arg line="--standard=${srcdir}/tests/phpcs.xml" />
    </exec>  
  </target>

  <!-- Phpstan -->
  <target name="phpstan-checkstyle">
    <exec executable="${srcdir}/vendor/bin/phpstan" escape="false" passthru="true" checkreturn="true">
      <arg line="--configuration=${srcdir}/tests/phpstan.neon --memory-limit=2G --error-format=checkstyle analyse &gt; ${builddir}/reports/phpstan-checkstyle.xml" />
    </exec>  
  </target>
  <target name="phpstan-console">
    <exec executable="${srcdir}/vendor/bin/phpstan" escape="false" passthru="true" checkreturn="true">
      <arg line="--configuration=${srcdir}/tests/phpstan.neon --memory-limit=2G analyse" />
    </exec>  
  </target>

  <!-- php-cs-fixer (first task applies fixes, second task simply checks if they are needed) -->
  <target name="php-cs-fixer">
    <exec executable="${srcdir}/vendor/bin/php-cs-fixer" passthru="true" escape="false">
      <arg line="fix --config=${srcdir}/tests/vufind.php-cs-fixer.php --verbose" />
    </exec>  
  </target>
  <target name="php-cs-fixer-dryrun">
    <exec executable="${srcdir}/vendor/bin/php-cs-fixer" passthru="true" escape="false" checkreturn="true">
      <arg line="fix --config=${srcdir}/tests/vufind.php-cs-fixer.php --dry-run --verbose --diff" />
    </exec>  
  </target>

  <!-- PHP API Documentation -->
  <target name="phpdoc">
    <!-- GET phpDocumentor.phar -->
    <if>
      <not><available file="${srcdir}/vendor/bin/phpDocumentor-${phpdoc_version}.phar" /></not>
      <then>
        <httpget followRedirects="true" url="https://github.com/phpDocumentor/phpDocumentor2/releases/download/v${phpdoc_version}/phpDocumentor.phar" dir="${srcdir}/vendor/bin" filename="phpDocumentor-${phpdoc_version}.phar" />
        <chmod mode="0755">
          <fileset dir="${srcdir}/vendor/bin">
            <include name="phpDocumentor-${phpdoc_version}.phar" />
          </fileset>
        </chmod>
      </then>
    </if>
    <!-- Run phpdoc -->
    <!-- Skip the whole phpdoc task when disabled -->
    <if>
      <not><istrue value="${skip_phpdoc}" /></not>
      <then>
        <mkdir dir="${builddir}/apidocs" />
        <mkdir dir="${builddir}/docs_cache" />
        <!-- Old embedded version; no longer works correctly...
        <phpdoc2 title="VuFindHttp API Documentation"
          pharlocation="${srcdir}/vendor/bin/phpDocumentor-${phpdoc_version}.phar"
          destdir="${builddir}/apidocs">
          <fileset dir=".">
            <include name="src/**/*.php" />
          </fileset>
        </phpdoc2>
        -->
        <exec executable="php" passthru="true">
          <arg line="${srcdir}/vendor/bin/phpDocumentor-${phpdoc_version}.phar --cache-folder=${builddir}/docs_cache --title=&quot;VuFindHttp API Documentation&quot; -t ${builddir}/apidocs -d ${srcdir}/src" />
        </exec>  
      </then>
    </if>
  </target>

  <!-- PHPUnit -->
  <target name="phpunit" description="Run tests">
    <exec dir="${srcdir}" executable="${sh}" passthru="true" checkreturn="true">
      <arg line="-c &apos;${phpunit_command} -dzend.enable_gc=0 --log-junit ${builddir}/reports/phpunit.xml --coverage-clover ${builddir}/reports/coverage/clover.xml --coverage-html ${builddir}/reports/coverage/&apos;" />
    </exec>  
  </target>

  <!-- PHPUnit without logging output -->
  <target name="phpunitfast" description="Run tests">
    <exec dir="${srcdir}" executable="${sh}" passthru="true" checkreturn="true">
      <arg line="-c &apos;${phpunit_command} -dzend.enable_gc=0&apos;" />
    </exec>  
  </target>

  <!-- Set up dependencies -->
  <target name="startup" description="set up dependencies">
    <exec executable="composer"> 
      <arg line="install" />
    </exec>  
  </target>

  <!-- Clean up -->
  <target name="shutdown" description="clean up file system">
    <delete dir="${srcdir}/vendor" includeemptydirs="true" failonerror="true" />
    <delete file="${srcdir}/composer.lock" failonerror="true" />
    <exec executable="git">
      <arg line="reset --hard" />
    </exec>  
  </target>
</project>
